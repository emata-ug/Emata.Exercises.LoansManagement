// <auto-generated />
using System;
using Emata.Exercise.LoansManagement.Loans.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Emata.Exercise.LoansManagement.Loans.Infrastructure.Data.Migrations
{
    [DbContext(typeof(LoansDbContext))]
    [Migration("20251029141322_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Loans")
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Emata.Exercise.LoansManagement.Loans.Domain.Loan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BorrowerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateOnly>("IssueDate")
                        .HasColumnType("date");

                    b.Property<decimal>("LoanAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<string>("Reference")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Loans", "Loans");
                });

            modelBuilder.Entity("Emata.Exercise.LoansManagement.Loans.Domain.Loan", b =>
                {
                    b.OwnsOne("Emata.Exercise.LoansManagement.Loans.Domain.Duration", "Duration", b1 =>
                        {
                            b1.Property<Guid>("LoanId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Length")
                                .HasColumnType("integer");

                            b1.Property<string>("Period")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.HasKey("LoanId");

                            b1.ToTable("Loans", "Loans");

                            b1.ToJson("Duration");

                            b1.WithOwner()
                                .HasForeignKey("LoanId");
                        });

                    b.OwnsOne("Emata.Exercise.LoansManagement.Loans.Domain.InterestRate", "InterestRate", b1 =>
                        {
                            b1.Property<Guid>("LoanId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("PercentageRate")
                                .HasColumnType("numeric");

                            b1.Property<string>("Period")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.HasKey("LoanId");

                            b1.ToTable("Loans", "Loans");

                            b1.ToJson("InterestRate");

                            b1.WithOwner()
                                .HasForeignKey("LoanId");
                        });

                    b.Navigation("Duration");

                    b.Navigation("InterestRate")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
